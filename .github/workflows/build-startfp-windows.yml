name: Build StartFP - Windows
on:
  workflow_call:
    outputs:
      artifact_name:
        description: "StartFP build artifact"
        value: ${{ jobs.build-startfp.outputs.artifact_name }}
env:
  startfp_src_suffix: StartFP/Source
  startfp_src_dir: ${{ github.workspace }}/StartFP/Source
  startfp_build_dir: ${{ github.workspace }}/StartFP/Build

jobs:
  build-startfp:
    name: Build StartFP - Windows (Release)
    runs-on: windows-latest
    env:
      vs_dir: C:/Program Files/Microsoft Visual Studio/2022/Enterprise
      cmake_gen: Ninja Multi-Config
    outputs:
      artifact_name: ${{ steps.get_artifact_name.outputs.artifact_name }}
    steps:
    - name: Set derived variables with shell because GitHub Actions env context sucks
      run: |
        echo "startfp_package_path=${{ env.startfp_build_dir }}/out/dist" >> $Env:GITHUB_ENV
        $startfp_install_path="${{ env.startfp_build_dir }}/out/install"
        echo "startfp_install_path=$startfp_install_path" >> $Env:GITHUB_ENV
    - name: Checkout StartFP
      uses: actions/checkout@v3
      with:
        path: ${{ env.startfp_src_suffix }}
        fetch-depth: 0 # Required for verbose versioning to work correctly
    - name: Build/Install StartFP
      working-directory: ${{ env.startfp_src_dir }}
      shell: cmd
      run: |
        echo "Setup C++ Build Environment..."
        CALL "${{ env.vs_dir }}\Common7\Tools\VsDevCmd.bat" -arch=x86
        echo "Configure CMake..."
        cmake -G "${{ env.cmake_gen }}" -S "${{ env.startfp_src_dir}}" -B "${{ env.startfp_build_dir }}"  
        echo "Changing to build directory..."
        cd "%startfp_build_dir%"
        echo "Building StartFP release..."
        cmake --build . --target all --config Release
        echo "Installing StartFP Release..."
        cmake --build . --target install --config Release
        echo "Packaging StartFP..."
        cpack -C "Release"
        echo "Build complete."
    - name: Get StartFP artifact name
      id: get_artifact_name
      run: echo "::set-output name=artifact_name::$((Get-ChildItem -Path "${{ env.startfp_package_path }}" -Filter *.zip)[0].BaseName)"
    - name: Upload StartFP build artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.get_artifact_name.outputs[env.artifact_output_var] }}
        path: ${{ env.startfp_install_path }}
        if-no-files-found: error
